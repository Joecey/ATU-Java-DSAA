package w4.ie.atu.sw;

import java.util.Objects;

public class LineItemImpl implements LineItem {
    // this will implement the LineItem interface
    // Follow all methods required by LineItem

    // Code > Implement Methods > Create stubs from the Interface

    private String number;
    private String name;
    private int qty;

    // try commenting this out - the remove() won't work properly without this
    // this was generated by IDE
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        LineItemImpl lineItem = (LineItemImpl) o;
        return Objects.equals(number, lineItem.number);
    }

    @Override
    public int hashCode() {
        return Objects.hash(number);
    }

    // generated by IDE - used for Comparable method
    @Override
    public int compareTo(LineItem o) {
//        return -this.number.compareTo(o.getItemNumber()); // use a minus if you want it in the opposite direction!
        return this.number.compareTo(o.getItemNumber());
    }

    private float price;

    // now we give three different constructors for the LineItemImpl
    public LineItemImpl() {
    }

    public LineItemImpl(String number, String name) {
        this.number = number;
        this.name = name;
    }

    public LineItemImpl(String number, String name, int qty, float price) {
        this.number = number;
        this.name = name;
        this.qty = qty;
        this.price = price;
    }

    public void setItemNumber(String number) {
        this.number = number;
    }

    public String getItemNumber() {
        return this.number;
    }

    public void setItemName(String name) {
        this.name = name;
    }

    public String getItemName() {
        return this.name;
    }

    public void setItemQuantity(int qty) {
        this.qty = qty;


    }

    public int getItemQuantity() {
        return this.qty;
    }

    public void setItemPrice(float price) {
        this.price = price;
    }

    public float getItemPrice() {
        return this.price;
    }
}
